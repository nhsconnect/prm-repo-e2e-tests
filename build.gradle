plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group 'uk.nhs.prm'
version '1.0-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(platform("software.amazon.awssdk:bom:2.30.21"))

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-activemq'

    implementation 'software.amazon.awssdk:ssm'
    implementation 'software.amazon.awssdk:sqs'
    implementation 'software.amazon.awssdk:sns'
    implementation 'software.amazon.awssdk:sts'
    implementation 'software.amazon.awssdk:cloudwatch'
    implementation 'software.amazon.awssdk:cloudwatchlogs'
    implementation 'software.amazon.awssdk:dynamodb-enhanced'

    implementation 'org.awaitility:awaitility:4.2.1'
    implementation 'org.jfree:jfreechart:1.5.5'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'org.json:json:20240303'
    implementation 'com.swiftmq:swiftmq-client:13.0.2'
    implementation 'org.xmlunit:xmlunit-matchers:2.10.0'
    implementation 'com.github.jknack:handlebars:4.4.0'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.78.1'
    implementation 'xerces:xercesImpl:2.12.2'

    compileOnly 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.integration:spring-integration-test'
    testImplementation 'org.xmlunit:xmlunit-matchers:2.10.0'
    testImplementation 'com.swiftmq:swiftmq-client:13.0.2'
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()

    // prevents tests running during build
    onlyIf {
        !project.gradle.startParameter.taskNames.contains('build')
    }
}

test {
    testLogging.showStandardStreams = true
    // https://github.com/apache/xerces-j/blob/main/src/org/apache/xerces/jaxp/SAXParserFactoryImpl.java
    systemProperty "javax.xml.parsers.SAXParserFactory", "org.apache.xerces.jaxp.SAXParserFactoryImpl"
}

configurations {
    groovyScript
}

dependencies {
    groovyScript localGroovy()
}

tasks.register('ehrTool', JavaExec) {
    classpath = configurations.groovyScript
    mainClass = 'groovy.ui.GroovyMain'
    args 'src/main/groovy/ehr-tool.groovy'
}

tasks.register('orcE2E', Test) {
    // environment.put("AWS_ACCESS_KEY_ID", "xxxxxxxxxxxx")
    // environment.put("AWS_SECRET_ACCESS_KEY", "xxxxxxxxxxxx")
    // environment.put("AWS_SESSION_TOKEN", "xxxxxxxxxxxx")
    // environment.put("AWS_DEFAULT_REGION", "eu-west-2")
    // environment.put("AWS_REGION", "eu-west-2")
    // environment.put("NHS_ENVIRONMENT", "dev")

    // https://github.com/apache/xerces-j/blob/main/src/org/apache/xerces/jaxp/SAXParserFactoryImpl.java
    systemProperty "javax.xml.parsersSAXParserFactory", "org.apache.xerces.jaxp.SAXParserFactoryImpl"

    filter {
        includeTestsMatching("uk.nhs.prm.e2etests.test.repositorye2etest.*")
        //includeTestsMatching("uk.nhs.prm.e2etests.test.repositorye2etest.RepositoryN*")
    }
}

test.outputs.upToDateWhen { false }
